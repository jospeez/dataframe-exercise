# -*- coding: utf-8 -*-
"""dataframe_exercise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AeZ7ddVaU834azAObzZdi_eYl2eiHfFn
"""

import pandas as pd

# Sample sales dataset (20 rows)
data = {
    "OrderID": range(1001, 1021),
    "Product": [
        "Laptop", "Mouse", "Keyboard", "Monitor", "Laptop",
        "Headphones", "Mouse", "Chair", "Desk", "Laptop",
        "Printer", "Keyboard", "Monitor", "Mouse", "Laptop",
        "Headphones", "Desk", "Monitor", "Printer", "Chair"
    ],
    "Category": [
        "Electronics", "Accessories", "Accessories", "Electronics", "Electronics",
        "Accessories", "Accessories", "Furniture", "Furniture", "Electronics",
        "Electronics", "Accessories", "Electronics", "Accessories", "Electronics",
        "Accessories", "Furniture", "Electronics", "Electronics", "Furniture"
    ],
    "Quantity": [2, 5, 3, 4, 1, 6, 10, 2, 1, 3, 2, 4, 2, 7, 5, 3, 2, 4, 1, 6],
    "Price": [800, 20, 50, 200, 850, 40, 25, 150, 300, 900, 120, 55, 250, 20, 750, 35, 280, 220, 110, 180],
    "Customer": [
        "Alice", "Bob", "Charlie", "Diana", "Ethan",
        "Fiona", "George", "Hannah", "Ian", "Jane",
        "Kyle", "Laura", "Mike", "Nina", "Oscar",
        "Paul", "Queen", "Robert", "Sarah", "Tom"
    ],
    "Region": [
        "North", "South", "East", "West", "North",
        "South", "East", "West", "North", "South",
        "East", "West", "North", "South", "East",
        "West", "North", "South", "East", "West"
    ]
}

# Create DataFrame
df = pd.DataFrame(data)

# Compute Total column
df["Total"] = df["Quantity"] * df["Price"]

print(df)

import pandas as pd

# Step 1: Create DataFrame
data = {
    "PlayerID": range(11, 22),
    "Players": ["KennyS", "Xyp9x", "GuardiaN", "NiKo", "Flusha", "ZywOo", "Dev1ce", "brax", "S1mple", "shroud", "m0NESY"],
    "Country": ["France", "Denmark", "Slovakia", "Bosnia", "Sweden", "IDK", "Denmark", "USA", "Ukraine", "Canada", "Russia"],
}
df = pd.DataFrame(data)

# Step 2: Show first 5 rows
print(df[1:6])

# Step 3: Print DataFrame shape
print("\nShape:", df.shape)

# Step 4: Show column names
print("\nColumns:", df.columns)

import pandas as pd

# Step 1: create dataframe (20 rows)
data = {
    "OrderID": range(1001, 1021),
    "Product": [
        "Laptop", "Mouse", "Keyboard", "Monitor", "Laptop",
        "Headphones", "Mouse", "Chair", "Desk", "Laptop",
        "Printer", "Keyboard", "Monitor", "Mouse", "Laptop",
        "Headphones", "Desk", "Monitor", "Printer", "Chair"
    ],
    "Category": [
        "Electronics", "Accessories", "Accessories", "Electronics", "Electronics",
        "Accessories", "Accessories", "Furniture", "Furniture", "Electronics",
        "Electronics", "Accessories", "Electronics", "Accessories", "Electronics",
        "Accessories", "Furniture", "Electronics", "Electronics", "Furniture"
    ],
    "Quantity": [2, 5, 3, 4, 1, 6, 10, 2, 1, 3, 2, 4, 2, 7, 5, 3, 2, 4, 1, 6],
    "Price": [800, 20, 50, 200, 850, 40, 25, 150, 300, 900, 120, 55, 250, 20, 750, 35, 280, 220, 110, 180],
    "Customer": [
        "Alice", "Bob", "Charlie", "Diana", "Ethan",
        "Fiona", "George", "Hannah", "Ian", "Jane",
        "Kyle", "Laura", "Mike", "Nina", "Oscar",
        "Paul", "Queen", "Robert", "Sarah", "Tom"
    ],
    "Region": [
        "North", "South", "East", "West", "North",
        "South", "East", "West", "North", "South",
        "East", "West", "North", "South", "East",
        "West", "North", "South", "East", "West"
    ]
}

# Create DataFrame
df = pd.DataFrame(data)
print("1. ------------------------------------")
#Step 2: show first 5 rows
print(df[1:6])

#Step 3: print dataframe shape - Ans 1: number of rows and columns
num_rows, num_cols = df.shape
print("\nShape:", df.shape)
print(f"Rows: {num_rows}")
print(f"Columns: {num_cols}")

#Step 4: print column names - Ans 2: column names
print("\nColumn Names:", df.columns)
print("\n")

#-----------------------------------------------------------#
print("2. ------------------------------------")
#Step 0: add total column
df["Total"] = df["Quantity"] * df["Price"]

#Step 1: add discount column (10% if quantity >= 5 else 0)
df["Discount"] = df["Total"].where(df["Quantity"] >= 5, 0) * 0.10

#Step 2: add finaltotal column (total - discount)
df["FinalTotal"] = df["Total"] - df["Discount"]

#Step 3: show selected columns
print(df[["OrderID", "Product", "Total", "Discount", "FinalTotal"]].head())
print("\n")

#-----------------------------------------------------------#
print("3. ------------------------------------")

#Step 1: create new record
new_row = {
    "OrderID": 1021,
    "Product": "Tablet",
    "Category": "Electronics",
    "Quantity": 2,
    "Price": 450,
    "Customer": "Victor",
    "Region": "East"
}

#Step 2: append to dataframe
df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)

#Step 3: recalculate total
df["Total"] = df["Quantity"] * df["Price"]

#Step 4: show last 3 rows
print(df.tail(3))
print("\n")
print("4. ------------------------------------")

# Step 1: Update price of Mouse products
df.loc[df["Product"] == "Mouse", "Price"] = 30

# Step 2: Recalculate Total for affected rows
df["Total"] = df["Quantity"] * df["Price"]

# Step 3: Show only Mouse rows
print(df[df["Product"] == "Mouse"])
print("\n")
print("5. ------------------------------------")

# Step 1: Drop Discount column
df = df.drop(columns=["Discount"])

# Step 2: Drop FinalTotal column
df = df.drop(columns=["FinalTotal"])

# Step 3: Show updated DataFrame
print(df.head())
print("\n")
print("6. ------------------------------------")

# Step 1: Drop row with OrderID = 1010
df = df.drop(df[df["OrderID"] == 1010].index, axis=0)

# Step 2: Drop the first row by index
df = df.drop(index=0)

# Step 3: Print new shape
print("New shape:", df.shape)
print("\n")
print("7. ------------------------------------")

# Step 1: Electronics with Quantity >= 3
result1 = df[(df["Category"] == "Electronics") & (df["Quantity"] >= 3)]
print(result1)

# Step 2: Products with Price > 500
result2 = df[df["Price"] > 500]
print(result2)

# Step 3: Count orders from North region
count_north = df[df["Region"] == "North"].shape[0]
print("North orders:", count_north)
print("\n")
print("8. ------------------------------------")

# Step 1: Sales in West region
west_sales = df[df["Region"] == "West"]
print(west_sales)

# Step 2: Sales by Alice
alice_sales = df[df["Customer"] == "Alice"]
print(alice_sales)

# Step 3: Sales of Laptop or Printer
subset_sales = df[df["Product"].isin(["Laptop", "Printer"])]
print(subset_sales)
print("\n")
print("9. ------------------------------------")

# convert price column to float
df["Price"] = df["Price"].astype("float64")

# Step 1: Increase Price of Furniture by 10%
df.loc[df["Category"] == "Furniture", "Price"] *= 1.10

# Step 2: Recalculate Total
df["Total"] = df["Quantity"] * df["Price"]

# Step 3: Show only Furniture rows
print(df[df["Category"] == "Furniture"])
print("\n")
print("10. ------------------------------------")

# Step 1: Sort by Total descending
sorted_df = df.sort_values(by="Total", ascending=False)
print(sorted_df.head())

# Step 2: Show top 5 sales
print(sorted_df.head(5))

# Step 3: Multi-level sort (Region then Customer)
multi_sort = df.sort_values(by=["Region", "Customer"])
print(multi_sort.head())
print("\n")
print("PART 2. ------------------------------------")

pri